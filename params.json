{"name":"Imbed","tagline":"This is a starting point for using web content in an iOS app, complete with rake tasks and pre-written handlers for common iOS tasks.","body":"# imbed\r\n\r\nThis is a starting point for using web content in an iOS app, complete with rake tasks and pre-written handlers for common iOS tasks. See [our announcement post](http://dojo4.com/blog/announcing-imbed-the-best-way-to-use-web-content-in-an-i-os-app).\r\n\r\n### Architecture\r\n\r\nInstead of learning a third party framework like Phonegap and hoping they have support for the features we wanted, we decided to use a simple open source framework to bridge JS in the webview and native code, so we could write the features we wanted in Objective C in the way Apple recommends. We're using Marcus Westin's great [WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) as our bridge to allow function calls between the two environments.\r\n\r\n### Usage\r\n\r\n1. `pod install`\r\n2. Follow examples to use [WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) in your JS and ObjC code.\r\n3. Put your web content in Imbed/www\r\n4. Run through Xcode (always open the workspace, not the project) or the rake tasks below\r\n\r\n(When you make changes to your web content, either test it in Chrome and then setup a `rake build_static` task to remove all files and copy yours back into the project, or do a `Clean` in Xcode before building again.)\r\n\r\n### Rake tasks\r\n\r\n1. `bundle install`\r\n2. `bundle exec rake -T`\r\n3. Edit your web content in the `/static` directory.\r\n3. `bundle exec rake build_static`\r\n4. Launch through Xcode or `bundle exec sim`\r\n\r\nLots of automation here:\r\n\r\n```\r\nrake build            # Build the application\r\nrake build_static     # Builds content from /static and copies it into the iOS app\r\nrake clean            # Clean the build\r\nrake deploy           # Upload ipa to testflight\r\nrake next_version     # Bumps the bundle version in preparation of the build\r\nrake notify_campfire  # Notify campfire of the Testflight release\r\nrake re_ship          # Re-compiles and ships current version of the app\r\nrake release_build    # Build the release config of the app\r\nrake ship_it          # Performs all the tasks for a deployment to Testflight\r\nrake sign             # Signs the app with the provisioning profile\r\nrake sim              # Runs the app in the iOS simulator TODO\r\nrake tag              # Tag the build\r\n```\r\n","google":"UA-45176316-1","note":"Don't delete this file! It's used internally to help with page regeneration."}